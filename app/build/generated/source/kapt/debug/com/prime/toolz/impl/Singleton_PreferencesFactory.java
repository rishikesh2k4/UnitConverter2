// Generated by Dagger (https://dagger.dev).
package com.prime.toolz.impl;

import android.content.Context;
import com.primex.preferences.Preferences;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class Singleton_PreferencesFactory implements Factory<Preferences> {
  private final Provider<Context> contextProvider;

  public Singleton_PreferencesFactory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public Preferences get() {
    return preferences(contextProvider.get());
  }

  public static Singleton_PreferencesFactory create(Provider<Context> contextProvider) {
    return new Singleton_PreferencesFactory(contextProvider);
  }

  public static Preferences preferences(Context context) {
    return Preconditions.checkNotNullFromProvides(Singleton.INSTANCE.preferences(context));
  }
}
