// Generated by Dagger (https://dagger.dev).
package com.prime.toolz;

import androidx.compose.material3.SnackbarHostState;
import com.primex.preferences.Preferences;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class MainActivity_MembersInjector implements MembersInjector<MainActivity> {
  private final Provider<Preferences> preferencesProvider;

  private final Provider<SnackbarHostState> channelProvider;

  public MainActivity_MembersInjector(Provider<Preferences> preferencesProvider,
      Provider<SnackbarHostState> channelProvider) {
    this.preferencesProvider = preferencesProvider;
    this.channelProvider = channelProvider;
  }

  public static MembersInjector<MainActivity> create(Provider<Preferences> preferencesProvider,
      Provider<SnackbarHostState> channelProvider) {
    return new MainActivity_MembersInjector(preferencesProvider, channelProvider);
  }

  @Override
  public void injectMembers(MainActivity instance) {
    injectPreferences(instance, preferencesProvider.get());
    injectChannel(instance, channelProvider.get());
  }

  @InjectedFieldSignature("com.prime.toolz.MainActivity.preferences")
  public static void injectPreferences(MainActivity instance, Preferences preferences) {
    instance.preferences = preferences;
  }

  @InjectedFieldSignature("com.prime.toolz.MainActivity.channel")
  public static void injectChannel(MainActivity instance, SnackbarHostState channel) {
    instance.channel = channel;
  }
}
